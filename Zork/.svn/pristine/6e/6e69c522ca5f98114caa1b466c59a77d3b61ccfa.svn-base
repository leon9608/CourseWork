package com.company;

import com.google.gson.Gson;
import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.*;

/**
 * Created by Yuyang on 13/2/2017.
 */
public class FunctionTest {
    private Layout siebelString;
    private Layout badSiebelMap;
    private Layout siebelFile;
    private Layout siebelUrl;
    private Room siebelEastHallway;
    private Function helper = new Function();


    @Before
    public void setUpLayout() {
        MagicGson magicgson = new MagicGson();
        Gson gson = new Gson();
        siebelString = gson.fromJson(testcase.siebel,Layout.class);
        badSiebelMap = gson.fromJson(testcase.badMap,Layout.class);
        siebelEastHallway = gson.fromJson(testcase.siebelEastHallway,Room.class);
        String[] source = {"C:\\Users\\Yuyang\\IdeaProjects\\Zork\\src\\com\\company\\siebel.json"};
        siebelFile = magicgson.createMap(source);
        siebelUrl = magicgson.createMap(new String[0]);
    }


    @org.junit.Test
    public void getTargetDirection() throws Exception {
        String expectedDirection = "southwest";
        String instruction = "go southwest";
        assertEquals(expectedDirection, helper.getTargetDirection(instruction));

    }

    @org.junit.Test
    public void isValidExit() throws Exception {
        String instruction = "exit";
        assertTrue(helper.isValidExit(instruction));
        instruction = "QUIT";
        assertTrue(helper.isValidExit(instruction));
        instruction = "DoNe";
        assertTrue(helper.isValidExit(instruction));

        instruction = "go out";
        assertFalse(helper.isValidExit(instruction));
        instruction = "OUT";
        assertFalse(helper.isValidExit(instruction));
    }

    @org.junit.Test
    public void isValidInput() throws Exception {
        String ValidInstruction = "exit";
        assertTrue(helper.isValidInput(ValidInstruction,siebelEastHallway));
        ValidInstruction = "QUIT";
        assertTrue(helper.isValidInput(ValidInstruction,siebelEastHallway));
        ValidInstruction = "DoNe";
        assertTrue(helper.isValidInput(ValidInstruction,siebelEastHallway));
        ValidInstruction = "go west";
        assertTrue(helper.isValidInput(ValidInstruction,siebelEastHallway));
        ValidInstruction = "go SoUth";
        assertTrue(helper.isValidInput(ValidInstruction,siebelEastHallway));
        ValidInstruction = "go DOWN";
        assertTrue(helper.isValidInput(ValidInstruction,siebelEastHallway));

        String invalidInstruction = "go out";
        assertFalse(helper.isValidInput(invalidInstruction,siebelEastHallway));
        invalidInstruction = "OUT";
        assertFalse(helper.isValidInput(invalidInstruction,siebelEastHallway));
        invalidInstruction = "";
        assertFalse(helper.isValidInput(invalidInstruction,siebelEastHallway));
        invalidInstruction = "go outer-space lar";
        assertFalse(helper.isValidInput(invalidInstruction,siebelEastHallway));
        invalidInstruction = "do you like programming";
        assertFalse(helper.isValidInput(invalidInstruction,siebelEastHallway));
        invalidInstruction = "go north";
        assertFalse(helper.isValidInput(invalidInstruction,siebelEastHallway));
        invalidInstruction = "jump down";
        assertFalse(helper.isValidInput(invalidInstruction,siebelEastHallway));
    }

    @org.junit.Test
    public void isValidLayout() throws Exception {
        assertTrue(helper.isValidLayout(siebelString));
        assertFalse(helper.isValidLayout(badSiebelMap));
        assertTrue(helper.isValidLayout(siebelFile));
        assertTrue(helper.isValidLayout(siebelUrl));
        assertTrue(siebelFile.getRooms()[5].equals(siebelString.getRooms()[5]));
    }

    @Test
    public void isIdentical() throws Exception{
        assertTrue(siebelFile.getRooms()[5].equals(siebelString.getRooms()[5]));
        assertTrue(siebelUrl.getRooms()[5].equals(siebelString.getRooms()[5]));
        assertTrue(siebelFile.getRooms()[5].equals(siebelUrl.getRooms()[5]));

        assertTrue(siebelFile.equals(siebelString));
        assertTrue(siebelFile.equals(siebelUrl));
        assertTrue(siebelUrl.equals(siebelString));
    }

}